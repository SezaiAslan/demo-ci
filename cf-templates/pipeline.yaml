AWSTemplateFormatVersion: 2010-09-09
Description: Template to create CodePipeline to build and deploy a Spring boot application as a docker container on ECS

Parameters:

  ProjectName:
    Type: String
    Description: The name of the project.
  RepositoryOwner:
    Type: String
    Description: The owner of the GitHub repository.
  RepositoryName:
    Type: String
    Description: The name of the GitHub repository.
  RepositoryBranch:
    Type: String
    Description: The name of the branch.
    Default: master

Resources:

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-pipeline
      Stages:
        - Name: Checkout
          Actions:
            - Name: Checkout
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref RepositoryOwner
                Repo: !Ref RepositoryName
                Branch: !Ref RepositoryBranch
                OAuthToken: "{{resolve:ssm:fortis-github-token:1}}"
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
        - Name: Deploy
          Actions:
            - Name: Prepare
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                TemplatePath: BuildOutput::template-output.yaml
                TemplateConfiguration: BuildOutput::config.json
                ChangeSetName: !Sub ${ProjectName}-changeset
                StackName: !Sub ${ProjectName}
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
            - Name: Execute
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Sub ${ProjectName}-changeset
                StackName: !Sub ${ProjectName}
              RunOrder: 2
      RoleArn: !GetAtt  CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket

  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub io.codepipeline.${ProjectName}
      LifecycleConfiguration:
        Rules:
          - Id: DeleteBuildArtifactsAfterOneWeek
            ExpirationInDays: 7
            Status: Enabled

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${ProjectName}-build-package
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Ref ArtifactsBucket

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineTrustPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt CodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
                  - iam:PassRole
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactsBucket}
                  - !Sub arn:aws:s3:::${ArtifactsBucket}/*


  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildTrustPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactsBucket}
                  - !Sub arn:aws:s3:::${ArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - ecr:*
                Resource:
                  - "*"
  #
  # Service role according to https://docs.aws.amazon.com/lambda/latest/dg/build-pipeline.html
  #
  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationTrustPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:allocateAddress
                  - ec2:CreateVpc
                  - ec2:DescribeVpcs
                  - ec2:DeleteVpc
                  - ec2:ModifyVpcAttribute
                  - ec2:createTags
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactsBucket}
                  - !Sub arn:aws:s3:::${ArtifactsBucket}/*
